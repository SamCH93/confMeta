% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kTRMu.R
\name{kTRMu}
\alias{kTRMu}
\title{Calculate the p-value using the k-Trials method.}
\usage{
kTRMu(
  thetahat,
  se,
  mu,
  phi = NULL,
  tau2 = NULL,
  heterogeneity = "none",
  alternative = "none",
  check_inputs = TRUE
)
}
\arguments{
\item{thetahat}{Numeric vector of parameter estimates.}

\item{se}{Numeric vector of standard errors.}

\item{mu}{A numeric vector containing null hypothesis value(s).}

\item{phi}{A numeric vector of length 1. Must be finite and larger than 0. The square root of the argument is used to scale the standard errors.}

\item{tau2}{A numeric vector of length 1.}

\item{heterogeneity}{One of \code{c("none", "additive", "multiplicative")}. If \code{heterogeneity = "none"} p-values are returned for the
passed \code{se} without any adaption. If \code{heterogeneity = "additive"}, the standard errors \code{se} are reassigned the value of \code{sqrt(se^2 + tau2)} before
computation of the p-values. If \code{heterogeneity = "multiplicative"}, the standard errors \code{se} are multiplied with the value of \code{phi} before
computation of the p-values. Defaults to \code{"none"}.}

\item{alternative}{Either \code{"greater"}, \code{"less"}, \code{"two.sided"}, or \code{"none"} (default).
Specifies the alternative to be considered in the computation of the p-value.}

\item{check_inputs}{Either \code{TRUE} (default) or \code{FALSE}. Indicates whether or not to check the input arguments.
The idea of this argument is that if the function is called a large amount of times in an automated manner as for example
in simulations, performance might be increased by not checking inputs in every single iteration. However, setting the argument
to \code{FALSE} might be dangerous.}
}
\value{
The corresponding p-value given mu under the null-hypothesis.
}
\description{
Calculate the p-value using the k-Trials method.
}
\details{
The function is vectorized over the argument \code{mu}.
}
\examples{
thetahat <- c(0.38041824, -0.22170681, -0.09155859)
se <- c(0.2256202, 0.2432796, 0.1051743)
phi <- estimatePhi(thetahat = thetahat, se = se)
tau2 <- estimateTau2(
    thetahat,
    se,
    control = list(stepadj = 0.5, maxiter = 1000, threshold = 1e-6)
)
mymu <- seq(
    min(thetahat - 3 * se),
    max(thetahat + 3 * se),
    length.out = 1000
)
p_add <- kTRMu(
    thetahat, se,
    mymu,
    tau2 = tau2,
    phi = phi,
    heterogeneity = "additive"
)
p_mult <- kTRMu(
    thetahat,
    se,
    mymu,
    tau2 = tau2,
    phi = phi,
    heterogeneity = "multiplicative"
)
}
